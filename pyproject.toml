[build-system]
requires = ["setuptools>=61", "setuptools_scm[toml]>=7"]
build-backend = "setuptools.build_meta"


[project]
name = "megatron-controls"
authors = [
  { name = "Brookhaven National Laboratory", email = "me@email.com" },
]
description = "Python Packages for Deposition Lab Controls"
readme = "README.md"
requires-python = ">=3.9"
classifiers = [
  "Development Status :: 1 - Planning",
  "Intended Audience :: Science/Research",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: BSD License",
  "Operating System :: OS Independent",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Topic :: Scientific/Engineering",
  "Typing :: Typed",
]
dynamic = ["version"]
dependencies = [
  "bluesky",
  "ophyd",
]

[project.optional-dependencies]
dev = [
    "attrs",
    "cloudpickle",
    "copier",
    "coverage",
    "databroker",
    "doct",
    "doctr",
    "flake8",
    "ipython",
    "ipywidgets",
    "jinja2",
    "lmfit",
    "mypy",
    "myst-parser",
    "numpydoc",
    "ophyd",
    "packaging",
    "pandas",
    "pickleshare",
    "pipdeptree",
    "pre-commit",
    "pydata-sphinx-theme>=0.12",
    "pytest",
    "pytest-cov",
    "pytest-faulthandler",
    "ruff",
    "sphinx<7.3",
    "sphinx-autobuild",
    "sphinx-copybutton",
    "sphinx-design",
    "sphinx_rtd_theme",
]

[project.urls]
Homepage = "https://github.com/NSLS-II-DLAB/megatron-controls"
"Bug Tracker" = "https://github.com/NSLS-II-DLAB/megatron-controls/issues"
Discussions = "https://github.com/NSLS-II-DLAB/megatron-controls/discussions"
Changelog = "https://github.com/NSLS-II-DLAB/megatron-controls/releases"


[tool.setuptools_scm]
write_to = "src/megatron_controls/_version.py"


[tool.uv]
dev-dependencies = [
  "megatron_controls[dev]",
]


[tool.pytest.ini_options]
minversion = "6.0"
addopts = ["-ra", "--showlocals", "--strict-markers", "--strict-config"]
xfail_strict = true
filterwarnings = [
  "ignore",
]
log_cli_level = "INFO"
testpaths = [
  "tests",
]


[tool.coverage]
run.source = ["megatron_controls"]
report.exclude_also = [
  '\.\.\.',
  'if typing.TYPE_CHECKING:',
]

[tool.mypy]
files = ["src", "tests"]
python_version = "3.9"
warn_unused_configs = true
strict = true
enable_error_code = ["ignore-without-code", "redundant-expr", "truthy-bool"]
warn_unreachable = true
disallow_untyped_defs = false
disallow_incomplete_defs = false

[[tool.mypy.overrides]]
module = "megatron_controls.*"
disallow_untyped_defs = true
disallow_incomplete_defs = true


[tool.ruff]
src = ["src", "tests"]
line-length = 115
lint.select = [
    "B",  # flake8-bugbear - https://docs.astral.sh/ruff/rules/#flake8-bugbear-b
    "C4", # flake8-comprehensions - https://docs.astral.sh/ruff/rules/#flake8-comprehensions-c4
    "E",  # pycodestyle errors - https://docs.astral.sh/ruff/rules/#error-e
    "F",  # pyflakes rules - https://docs.astral.sh/ruff/rules/#pyflakes-f
    "W",  # pycodestyle warnings - https://docs.astral.sh/ruff/rules/#warning-w
    "I",  # isort - https://docs.astral.sh/ruff/rules/#isort-i
    "UP", # pyupgrade - https://docs.astral.sh/ruff/rules/#pyupgrade-up
]
exclude = [
    "docs/source/conf.py",
    "docs/source/examples",
    "src/bluesky/_vendor"
]


[tool.flake8]
# Check that this is aligned with your other tools like Black
max-line-length = 115
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    "megatron_controls/_version.py",
    "docs/source/conf.py",
]
# Use extend-ignore to add to already ignored checks which are anti-patterns like W503.
extend-ignore = [
    # PEP 8 recommends to treat : in slices as a binary operator with the lowest priority, and to leave an equal
    # amount of space on either side, except if a parameter is omitted (e.g. ham[1 + 1 :]).
    # This behaviour may raise E203 whitespace before ':' warnings in style guide enforcement tools like Flake8.
    # Since E203 is not PEP 8 compliant, we tell Flake8 to ignore this warning.
    # https://black.readthedocs.io/en/stable/the_black_code_style/current_style.html#slices
    "E203",
    "W503",
    "E701",
    "E704",
]


[tool.black]
line-length = 115
target-version = ['py310']
include = '\.pyi?$'
force-exclude = '''
(
  /(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | \.pytest_cache
    | _build
    | buck-out
    | build
    | dist
    | docs
  )/
  | versioneer.py
)
'''

[tool.isort]
line_length = 115
multi_line_output = 3
include_trailing_comma = true
profile = "black"
